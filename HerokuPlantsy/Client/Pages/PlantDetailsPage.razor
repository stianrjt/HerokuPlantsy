@page "/plantDetails/{ID}"

@using HerokuPlantsy.Shared
@using System.IO
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IDialogService DialogService
@using System.ComponentModel.DataAnnotations

@if (plant == null)
{
	<MudSkeleton />
	<MudSkeleton SkeletonType="SkeletonType.Circle" Width="50px" Height="50px" />
	<MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
}

@if (plant != null)
{
	var link = $"editPlant/{plant.ID.ToString()}";
<MudGrid>
	<MudItem Style="background-color: transparent; border: hidden; elevation: unset" xs="12" md="3">
		<img src="@plant.Image.ImagePath" alt="plantimage" height="200" width="200" />
	</MudItem>

	<MudItem Style="background-color: transparent; border: hidden; elevation: unset" xs="12" md="9">
		<MudCard>
			<MudCardContent Elevation="3" Class="flex-wrap ma-2">
				<MudText Typo="Typo.h3">@plant.PlantName</MudText>
				<MudText Typo="Typo.body1">@plant.PlantType</MudText>
				<MudText Typo="Typo.body2">@plant.Info</MudText>
			</MudCardContent>
			<MudCardActions>
				<MudLink Href="@link">
					<MudButton Variant="Variant.Text" Color="Color.Secondary">Edit Plant</MudButton>
				</MudLink>
			</MudCardActions>
		</MudCard>
	</MudItem>

	<MudItem Style="background-color: transparent; border: hidden; elevation: unset" xs="12" md="6">
			<MudCard Elevation="3" Class="flex-wrap ma-2">
				<MudCardContent Elevation="3" Class="flex-wrap ma-2">
					<MudText Typo="Typo.h3">Water log</MudText>
					<MudList Class="align-content-end">
						@foreach (var item in plant.WaterLog)
						{
							<MudListItem Icon="fas fa-tint">
								Watered: @item.WaterDate.LocalDateTime
							</MudListItem>

						}

					</MudList>
				</MudCardContent>
			</MudCard>
	</MudItem>
	
	<MudItem Style="background-color: transparent; border: hidden; elevation: unset" xs="12" md="6">
			<MudCard Elevation="3" Class="flex-wrap ma-2">
				<MudCardContent Elevation="3" Class="flex-wrap ma-2">
					<div>
						<MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
					</div>
				</MudCardContent>
			</MudCard>
	</MudItem>


</MudGrid>
		}




@code {

		private int Index = -1;
		public List<ChartSeries> Series;
		public string[] XAxisLabels;
		public string[] months = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };

		[Parameter]
		public string ID { get; set; }
		Plant plant;

		protected override async Task OnInitializedAsync()
		{
			plant = await Http.GetFromJsonAsync<Plant>($"plants/{ID}");
			plant.WaterLog.Sort((x, y) => DateTimeOffset.Compare(y.WaterDate, x.WaterDate));

			if (plant.Image == null)
			{
				plant.Image = new() { ImagePath = "Strelitzia-reginae-1.jpg", ImageName = plant.PlantName + "Image" };
			}




		Series = new List<ChartSeries>()
		{
			new ChartSeries() { Name = "Watered", Data = plant.WaterLog.Select(x => x.WaterDate.Month).GroupBy(x => x).Select(y => (double)y.Count()).ToArray() },
		};

		var x = plant.WaterLog.Select(x => x.WaterDate.Month).GroupBy(x => x).Select(y => y.Count());

		XAxisLabels = plant.WaterLog.Select(x =>months[x.WaterDate.Month-1]).Distinct().ToArray();

}
}

}
